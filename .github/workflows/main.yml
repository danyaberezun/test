name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Display the path
#         run: echo $PATH
#         shell: bash
#       - uses: docker://berezun/cw-2020
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Display the path
        run: ls
        shell: bash
      - name: test2
        run: echo $(ls)
      - name: t1
        run: |
          ls
          echo $(ls)
        shell: bash
      - name: t2
        run: |
          ls
          echo $(ls)
        shell: bash
  
  container:
    runs-on: ubuntu-latest
    container: berezun/cw-2020
    steps:
      - run: |
          echo This job does specify a container.
          echo It runs in the container instead of the VM.
          echo $(ls)
          opam init
          opam update
          opam upgrade
          cd /usr/share/compiler-2020
          eval `opam config env`
          ocamlc -v
          opam pin list
          make
        name: Run in container
#     run:
#         docker pull berezun/cw-2020
#         docker run -d -it --name cw-2020 -v $(pwd):/usr/share/compiler-2020 berezun/cw-2020
#     script:
#         docker exec -it cw-2020 sh test.sh
# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the action will run. Triggers the workflow on push or pull request
# # events but only for the master branch
# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#     - uses: actions/checkout@v2

#     # Runs a single command using the runners shell
#     - name: Run a one-line script
#       run: echo Hello, world!

#     # Runs a set of commands using the runners shell
#     - name: Run a multi-line script
#       run: |
#         echo Add other actions to build,
#         echo test, and deploy your project.
